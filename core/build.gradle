buildscript {
    repositories {
        maven { url 'https://mvn.topobyte.de' }
    }
    dependencies {
        classpath 'de.topobyte:gradle-version-access-plugin:0.1.0'
    }
}

apply plugin: 'de.topobyte.version-access-gradle-plugin'

if (project.hasProperty("topobyte")) {
    apply from: 'file:///' + System.getProperty("user.home") \
        + '/.gradle/topobyte.gradle'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    api 'de.topobyte:osm4j-utils:1.2.0'
    api 'de.topobyte:awt-utils:0.0.3'
    api 'de.topobyte:swing-utils:0.0.12'
    api 'de.topobyte:jts2awt:0.1.0'
    api 'de.topobyte:mercator-image:0.1.0'
    api 'de.topobyte:jeography-tools:0.2.0'
    api 'de.topobyte:chromaticity-core:0.0.2'
    api 'de.topobyte:chromaticity-awt:0.0.2'
    api 'de.topobyte:overpass-utils:0.2.0'
    api 'de.topobyte:inkscape4j-core:0.1.0'
    api 'de.topobyte:inkscape4j-jts:0.1.0'
    api 'de.topobyte:inkscape4j-awt:0.1.0'
    api 'de.topobyte:inkscape4j-writer:0.1.0'

    testRuntimeOnly 'org.slf4j:slf4j-log4j12:1.6.1'
    testRuntimeOnly 'log4j:log4j:1.2.16'
}

java {
    withSourcesJar()
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

def pomInfo = new XmlSlurper().parse(new File(projectDir, 'info.pom'));

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = "$pomInfo.name"
                description = "$pomInfo.description"
                url = "$pomInfo.url"
            }
        }
    }
}

generateVersionAccessSource {
    packageName = "de.topobyte.osmocrat"
}
